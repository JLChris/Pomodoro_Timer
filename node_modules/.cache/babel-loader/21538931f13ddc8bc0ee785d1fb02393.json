{"ast":null,"code":"var _jsxFileName = \"/Users/jonahchristian/Desktop/Thinkful/projects/promodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/TimerDisplay.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction TimerDisplay({\n  session,\n  durations,\n  isTimerRunning\n}) {\n  if (session) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }\n    }, session === null || session === void 0 ? void 0 : session.label, \" for \", session.label === \"Focusing\" ? minutesToDuration(durations.focus) : minutesToDuration(durations.break), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      session: session,\n      durations: durations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, isTimerRunning ? \"\" : /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 40\n      }\n    }, \"PAUSED\")));\n  } else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  });\n}\n\nexport default TimerDisplay;","map":{"version":3,"sources":["/Users/jonahchristian/Desktop/Thinkful/projects/promodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/TimerDisplay.js"],"names":["React","minutesToDuration","secondsToDuration","ProgressBar","TimerDisplay","session","durations","isTimerRunning","label","focus","break","timeRemaining"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA;AAAtB,CAAtB,EAA8D;AAC1D,MAAIF,OAAJ,EAAa;AACT,wBAAQ,uDACJ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,OADL,aACKA,OADL,uBACKA,OAAO,CAAEG,KADd,WAEQH,OAAO,CAACG,KAAR,KAAkB,UAAlB,GAA+BP,iBAAiB,CAACK,SAAS,CAACG,KAAX,CAAhD,GACIR,iBAAiB,CAACK,SAAS,CAACI,KAAX,CAH7B,aAFJ,eAQI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,iBAAiB,CAACG,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEM,aAAV,CADtB,eARJ,CADJ,CADI,eAeJ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEN,OAAtB;AAA+B,MAAA,SAAS,EAAEC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAfI,eAoBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,cAAc,GAAG,EAAH,gBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD3B,CApBI,CAAR;AAwBH,GAzBD,MA0BK,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAER;;AAED,eAAeH,YAAf","sourcesContent":["import React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction TimerDisplay({ session, durations, isTimerRunning }) {\n    if (session) {\n        return (<>\n            <div className=\"row mb-2\">\n                <div className=\"col\">\n                    {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n                    <h2 data-testid=\"session-title\">\n                        {session?.label} for {\n                            session.label === \"Focusing\" ? minutesToDuration(durations.focus) :\n                                minutesToDuration(durations.break)} minutes\n                    </h2>\n                    {/* TODO: Update message below correctly format the time remaining in the current session */}\n                    <p className=\"lead\" data-testid=\"session-sub-title\">\n                        {secondsToDuration(session?.timeRemaining)} remaining\n                    </p>\n                </div>\n            </div>\n            <div className=\"row mb-2\">\n                <div className=\"col\">\n                    <ProgressBar session={session} durations={durations} />\n                </div>\n            </div>\n            <div>\n                {isTimerRunning ? \"\" : <h2>PAUSED</h2>}\n            </div>\n        </>);\n    }\n    else return <div></div>;\n\n}\n\nexport default TimerDisplay;"]},"metadata":{},"sourceType":"module"}