{"ast":null,"code":"var _jsxFileName = \"/Users/jonahchristian/Desktop/Thinkful/projects/promodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js\";\nimport React from \"react\";\n\nfunction ProgressBar({\n  session,\n  durations\n}) {\n  let elapsedTime = 0;\n  const focusTime = durations.focus * 60;\n  const breakTime = durations.break * 60;\n\n  if (session && session.label === \"Focusing\") {\n    elapsedTime = (focusTime - session.timeRemaining) / focusTime * 100;\n  } else if (session && session.label === \"On Break\") {\n    elapsedTime = (breakTime - session.timeRemaining) / breakTime * 100;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": elapsedTime // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${elapsedTime}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/jonahchristian/Desktop/Thinkful/projects/promodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js"],"names":["React","ProgressBar","session","durations","elapsedTime","focusTime","focus","breakTime","break","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAArB,EAA6C;AACzC,MAAIC,WAAW,GAAG,CAAlB;AACA,QAAMC,SAAS,GAAGF,SAAS,CAACG,KAAV,GAAkB,EAApC;AACA,QAAMC,SAAS,GAAGJ,SAAS,CAACK,KAAV,GAAkB,EAApC;;AACA,MAAIN,OAAO,IAAIA,OAAO,CAACO,KAAR,KAAkB,UAAjC,EAA6C;AACzCL,IAAAA,WAAW,GAAI,CAACC,SAAS,GAAGH,OAAO,CAACQ,aAArB,IAAsCL,SAAvC,GAAoD,GAAlE;AACH,GAFD,MAEO,IAAIH,OAAO,IAAIA,OAAO,CAACO,KAAR,KAAkB,UAAjC,EAA6C;AAChDL,IAAAA,WAAW,GAAI,CAACG,SAAS,GAAGL,OAAO,CAACQ,aAArB,IAAsCH,SAAvC,GAAoD,GAAlE;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,qBAAc,GAHlB;AAII,qBAAc,KAJlB;AAKI,qBAAeP,WALnB,CAKgC;AALhC;AAMI,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAG,GAAER,WAAY;AAAxB,KANX,CAMyC;AANzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAWH;;AAED,eAAeH,WAAf","sourcesContent":["import React from \"react\";\n\nfunction ProgressBar({ session, durations }) {\n    let elapsedTime = 0;\n    const focusTime = durations.focus * 60;\n    const breakTime = durations.break * 60;\n    if (session && session.label === \"Focusing\") {\n        elapsedTime = ((focusTime - session.timeRemaining) / focusTime) * 100;\n    } else if (session && session.label === \"On Break\") {\n        elapsedTime = ((breakTime - session.timeRemaining) / breakTime) * 100;\n    }\n\n    return (\n        <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={elapsedTime} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${elapsedTime}%` }} // TODO: Increase width % as elapsed time increases\n            />\n        </div>);\n}\n\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}